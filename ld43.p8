pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

-- https://github.com/s4e-tom/platformer

-- dialogue text box library by oli414. minimized.
function dtb_init(n) dtb_q={}dtb_f={}dtb_n=3 if n then dtb_n=n end _dtb_c() end function dtb_disp(t,c)local s,l,w,h,u s={}l=""w=""h=""u=function()if #w+#l>29 then add(s,l)l=""end l=l..w w=""end for i=1,#t do h=sub(t,i,i)w=w..h if h==" "then u()elseif #w>28 then w=w.."-"u()end end u()if l~=""then add(s,l)end add(dtb_q,s)if c==nil then c=0 end add(dtb_f,c)end function _dtb_c()dtb_d={}for i=1,dtb_n do add(dtb_d,"")end dtb_c=0 dtb_l=0 end function _dtb_l()dtb_c+=1 for i=1,#dtb_d-1 do dtb_d[i]=dtb_d[i+1]end dtb_d[#dtb_d]=""sfx(2)end function dtb_update()if #dtb_q>0 then if dtb_c==0 then dtb_c=1 end local z,x,q,c z=#dtb_d x=dtb_q[1]q=#dtb_d[z]c=q>=#x[dtb_c]if c and dtb_c>=#x then if btnp(4) then if dtb_f[1]~=0 then dtb_f[1]()end del(dtb_f,dtb_f[1])del(dtb_q,dtb_q[1])_dtb_c()sfx(2)return end elseif dtb_c>0 then dtb_l-=1 if not c then if dtb_l<=0 then local v,h v=q+1 h=sub(x[dtb_c],v,v)dtb_l=1 if h~=" " then sfx(0)end if h=="." then dtb_l=6 end dtb_d[z]=dtb_d[z]..h end if btnp(4) then dtb_d[z]=x[dtb_c]end else if btnp(4) then _dtb_l()end end end end end function dtb_draw()if #dtb_q>0 then local z,o z=#dtb_d o=0 if dtb_c<z then o=z-dtb_c end rectfill(cam.x+2, cam.y+125-z*8,cam.x+125,cam.y+125,7)if dtb_c>0 and #dtb_d[#dtb_d]==#dtb_q[1][dtb_c] then print("\x8e",cam.x+118,cam.y+120,1)end for i=1,z do print(dtb_d[i], cam.x+4, cam.y+i*8+119-(z+o)*8,1)end end end

tick=30
score = 0
paused=false

hoveritem = ""
gamestate = 0
diag=false
nearestenemy = 0

p={
 x=8,y=8,
 dx=0,dy=0,
 w=1,h=1,
 speed=1,
 sprite=64,
 frame=0,
 cm=true,
 health=3,
 savex=12,
 savey=12,
 items=0
}

mob={
 x=0,y=0,
 dx=0,dy=0,
 w=1,h=1,
 sprite=0,
 speed=0,
 dmg=1
}

inv = {}

cam = {
 x=-40,
 y=-40,
 speed=1,
}

enemies = {}

function _init()
end

function gameinit()
 gamestate=1

 for i=0,5 do
  createmob(82,66+i,11,1,1)
  createmob(82,95+i,9,1,1)
  createmob(82,114+i,11,1,1)
 end

 createmob(82,5,5,1,1)

 dtb_init(numlines)
 dtb_disp("hi, im otto")
 dtb_disp("i lost my origami homework")
 dtb_disp("big gust of wind came and blew it away")
 dtb_disp("ive got to find it before class starts",function()
  diag=false
 end)
end

function createmob(sprite,x,y,speed,dmg)
 m = {}
 m.sprite = sprite
 m.x = x*8
 m.y = y*8
 m.dx=0
 m.dy=0
 m.w=1
 m.h=1
 m.speed = speed
 m.dmg = dmg
 add(enemies,m)
end

function p:move()

 local lx=self.x -- last x
 local ly=self.y -- last y

 left=btn(0)
 right=btn(1)
 up=btn(2)
 down=btn(3)
 use=btnp(4)
 cancel=btn(5)

 if(gamestate==1) then
  if (left) self.x -= self.speed
  if (right) self.x += self.speed
  if (up) self.y -= self.speed
  if (down) self.y += self.speed
  if (use) checkitem()
 end

 if(cmap(p)) self.x=lx self.y=ly
end

function p:checkcollision()
 local col
 foreach(enemies, function(e)
  -- local hitrange=25
  -- local dx,dy = p.x-e.x,p.y-e.y
  -- if abs(dx) < hit_range and abs(dy) < hit_range then
  --  if dx*dx +dy*dy < hit_range*hit_range then
  --   -- we have a collision!
  --   p:take_damage()
  --  end
  -- end
 end)

 item = fget(mget(p.x/8,p.y/8,0))

 if(item == 66) then
  pause()
  dtb_disp("item get!", unpause())
 end
end

function p:take_damage()
 p.health -= 1
 p.x = p.savex
 p.y = p.savey
 if(p.health == 0) gamestate = 2
end

function enemies:move()
 if(tick == 0) then
  foreach(enemies, function(e) 
   r = rnd(2) - 1
   r2 = rnd(2) - 1
   e.x=e.x+r*8
   e.y=e.y+r2*8
   move_actor(e)
  end)
 end
end

function enemies:draw()
 foreach(enemies, function(e)
  spr(e.sprite,e.x,e.y,1,1)
 end)
end

function checkitem()
 hoveritem = tostr(mget(p.x/8,p.y/8))

 if(tostr(hoveritem) == "66") dtb_disp("i found the swan!") get_item(69)
 if(tostr(hoveritem) == "67") dtb_disp("i found the turtle!") get_item(70)
 if(tostr(hoveritem) == "68") dtb_disp("i found the fish!") get_item(71)
 if(tostr(hoveritem) == "131") then dtb_disp("off we go!",function()
  teleport(44,17)
 end)end
 if(tostr(hoveritem) == "130") then dtb_disp("back home we go!",function()
  teleport(20,1)
 end)end
 if(tostr(hoveritem) == "145") then dtb_disp("homeward ahoy",function()
  teleport(20,8)
 end)end
 if(tostr(hoveritem) == "133" or tostr(hoveritem) == "134" or tostr(hoveritem) == "149" or tostr(hoveritem) == "150") then
  if (p.items>2) endgame()
 end
end

function teleport(x, y)
 sfx(1)
 p.x=x*8
 p.y=y*8
 p.savex=p.x
 p.savey=p.y
 diag=false
end

function get_item(object)
 add(inv, object)
 score += 1
 p.items += 1
 mset(p.x/8,p.y/8,88)
end

function p:update()
 p:move()
 p:checkcollision()
end

function p:draw()
 spr(self.sprite,self.x,self.y,self.w,self.h)
end

function cam:update()

 allowance = 20

 if(p.x-cam.x<(64-allowance)) then
  cam.x -= self.speed
 end

 if(p.x-cam.x>(64+allowance)) then
  cam.x += self.speed
 end

 if(p.y-cam.y<(64-allowance)) then
  cam.y -= self.speed
 end

 if(p.y-cam.y>(64+allowance)) then
  cam.y += self.speed
 end

 camera(cam.x, cam.y)
end

function update_tick()
 if(not paused) then
  if(tick == 0) tick = 30
  tick -= 1
 end
end

function _update()
 if(gamestate == 0) then
  if(btnp(4)) gameinit()
 end
 if (gamestate == 1) then
  p:update()
  enemies:move()
  dtb_update()
  update_tick()
 end
 if (gamestate == 2) then
  if(btn(4)) gamestate = 1
 end
end

function _draw()
 if(gamestate == 0) then
  drawmenu()
 end

 if(gamestate == 1) then
  cls(12)
  map(0,0,0,0)
  cam:update()
  enemies:draw()
  p:draw()
  drawui()
  dtb_draw()
 end

 if(gamestate == 2) then
  cls(0)
  print("game over", 46, 60, 8)
 end
end

-- for any given point on the
-- map, true if there is wall
-- there.

function solid(x, y)

 -- grab the cell value
 val=mget(x, y)
 
 -- check if flag 1 is set (the
 -- orange toggle button in the 
 -- sprite editor)
 return fget(val, 7)
 
end

-- solid_area
-- check if a rectangle overlaps
-- with any walls

--(this version only works for
--actors less than one tile big)

function solid_area(x,y,w,h)

 return 
  solid(x-w,y-h) or
  solid(x+w,y-h) or
  solid(x-w,y+h) or
  solid(x+w,y+h)
end


-- true if a will hit another
-- actor after moving dx,dy
function solid_actor(a, dx, dy)
 for a2 in all(actor) do
  if a2 != a then
   local x=(a.x+dx) - a2.x
   local y=(a.y+dy) - a2.y
   if ((abs(x) < (a.w+a2.w)) and
      (abs(y) < (a.h+a2.h)))
   then 
    
    -- moving together?
    -- this allows actors to
    -- overlap initially 
    -- without sticking together    
    if (dx != 0 and abs(x) <
        abs(a.x-a2.x)) then
     v=a.dx + a2.dy
     a.dx = v/2
     a2.dx = v/2
     return true 
    end
    
    if (dy != 0 and abs(y) <
        abs(a.y-a2.y)) then
     v=a.dy + a2.dy
     a.dy=v/2
     a2.dy=v/2
     return true 
    end
    
    --return true
    
   end
  end
 end
 return false
end


-- checks both walls and actors
function solid_a(a, dx, dy)
 if solid_area(a.x+dx,a.y+dy,
    a.w,a.h) then
    return true end
 return solid_actor(a, dx, dy) 
end

function move_actor(a)

 -- only move actor along x
 -- if the resulting position
 -- will not overlap with a wall

 if not solid_a(a, a.dx, 0) 
 then
  a.x += a.dx
 else   
  -- otherwise bounce
  a.dx = 0
  sfx(2)
 end

 -- ditto for y

 if not solid_a(a, 0, a.dy) then
  a.y += a.dy
 else
  a.dy = 0
  sfx(2)
 end
 
 -- apply inertia
 -- set dx,dy to zero if you
 -- don't want inertia
 
 a.dx = 0
 a.dy = 0
 
 -- advance one frame every
 -- time actor moves 1/4 of
 -- a tile
 
 -- a.frame += abs(a.dx) * 4
 -- a.frame += abs(a.dy) * 4
 -- a.frame %= a.frames

 -- a.t += 1
 
end

function cmap(o)
 local ct=false
 local cb=false

 -- if colliding with map tiles
 if(o.cm) then
  local x1=o.x/8
  local y1=o.y/8
  local x2=(o.x+7)/8
  local y2=(o.y+7)/8
  local a=fget(mget(x1,y1),7)
  local b=fget(mget(x1,y2),7)
  local c=fget(mget(x2,y2),7)
  local d=fget(mget(x2,y1),7)
  ct=a or b or c or d
 end

 return ct or cb
end

function pause()
 paused=true
end

function unpause()
 paused=false
end

function dst(o1,o2)
 return sqrt(sqr(o1.x-o2.x)+sqr(o1.y-o2.y))
end

function sqr(x) return x*x end

function drawui()
 rectfill(cam.x-64,cam.y-64,cam.x+128,cam.y+12,0)
 -- print(hoveritem, cam.x+16, cam.y+2)
 print(nearestenemy, cam.x+16, cam.y+2, white)
 for c=1,p.health do
  spr(80,cam.x+88 + (c*10), cam.y+2)
 end
 local counter = 0
 foreach (inv, function(item)
  spr(item, cam.x+2+(counter * 10), cam.y+2)
  counter += 1
 end)
end

function drawmenu()
 rectfill(0,0,128,128,2)
 circfill(64,64,75,8)
 circfill(64,64,65,9)
 circfill(64,64,35,10)
 rectfill(0,50,128, 128, 12)
 rectfill(0,96,128,128,7)
 rectfill(0,100,128,128,15)
 spr(135,32,10,8,6)

 print("press z to start", 32, 64, 1)
 print("by alex carlson - ludum dare 43", 2, 122)
end

function endgame()
 gamestate = 3
 cls(10)
 print("you winned", 35, 60)
end

__gfx__
00033000003000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03333330030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
30244203000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00094000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00094000000033000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00044000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00094000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00094000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000003330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00033300033333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00333330033333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03333330033333300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ff5ffffffffff4ff0000000007000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ffffffffffffffff0000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ffffff5fffffffff0007000000777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ffffffffffffffff0070700000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f5ffffffffffffff0007000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
fffff5fff4fff4ff0000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007000000dd00dddd00dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000700dd00dd0000dd00dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0700000000dd00dddd00dd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000700dd00dd0000dd00dd00000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0044440000444400fffafffffff33fffffffffff000a000000033000000000000000000000000000000000000000000000000000000000000000000000000000
044ff440044ff440faa9fffff3f33f3ff9fffccf0aa900000303303009000cc00000000000000000000000000000000000000000000000000000000000000000
04ffff4004ffff40fff9ffa9f33bb33ff9cf9ccc000900a9033bb33009c09ccc0000000000000000000000000000000000000000000000000000000000000000
04fcfc4004fcfc40fffaaa94f3bbbb3ff9cc9ccc000aaa9403bbbb3009cc9ccc0000000000000000000000000000000000000000000000000000000000000000
01ffff1001ffff10ffa9999ff3bbbb3ff9c19cc100a9999003bbbb3009c19cc10000000000000000000000000000000000000000000000000000000000000000
0f1111f00f1111f0ffa9994ff3bbbb3ff91f111f00a9994003bbbb30091011100000000000000000000000000000000000000000000000000000000000000000
0fccccf00fccccf0ffa994ffff3bb3fff1ffffff00a99400003bb300010000000000000000000000000000000000000000000000000000000000000000000000
0566566005665660fa994ffff3f33f3fffffffff0a99400003033030000000000000000000000000000000000000000000000000000000000000000000000000
0770077007700770088a0000000000000000000000000000000000006ddddd6dffffffffffffffffffccccccffffffffccccccff333333333333333333333333
7887788775577557888a8a0000000000000000000000000000000000dd666dd5fffffffffffffffffccccccccccccccccccccccf333333333334333333333333
7888888775555557070000a000000000000000000000000000000000ddddddddffffffffffffffffcccccccccccccccccccccccc433343344344333443333334
78888887755555570000008000000000000000000000000000000000ddddddd5ffffffffffffffffcccccccccccccccccccccccc443443444644434443343334
788888877555555700008a000000000000000000000000000000000066d5ddddffffffffffffffffcccccccccccccccccccccccc444444464444444444343344
07888870075555700a8a000000000000000000000000000000000000ddd55dd5ffffffffffffffffcccccccccccccccccccccccc444444444444644444443344
00788700007557008000000a00000000000000000000000000000000dddddd55ffffffffcccccccccccccccccccccccccccccccc446446444444444444463444
00077000000770000a8a8a800000000000000000000000000000000055555555ffffffffcccccccccccccccccccccccccccccccc444444444444446444444444
00000000000000000000000000000000000000000000000000000000f323fbffcffffffffffffffcfccccccccccccccccccccccf444446444444444444444444
00000000000000000000000000000000000000000000000000000000b33b3323fffffffffffffffffccccccccccccccccccccccf444444444444444444444644
00000000000000000000000000000000000000000000000000000000f333333ffffffffffffffffffccccccccccccccccccccccf444444444444644446444444
0000000000000000000000000000000000000000000000000000000032b333b3fffffffffffffffffccccccccccccccccccccccf444444444444444444444444
00000000000000000000000000000000000000000000000000000000b3333233fffffffffffffffffccccccccccccccccccccccf444444444644444444444444
00000000000000000000000000000000000000000000000000000000323323bffffffffffffffffffccccccccccccccccccccccf446444444444444444444464
00000000000000000000000000000000000000000000000000000000f3b33323fffffffffffffffffccccccccccccccccccccccf444444464444464444444444
00000000000000000000000000000000000000000000000000000000ff33fbfffffffffffffffffffccccccccccccccccccccccf444444444444444444444444
0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffcccccccccccccccccccccccc007700778888888870707070
0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffcccccccccccccccccccccccc007700778888888870707070
0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffcccccccccccccccccccccccc770077008888888870707070
0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffcccccccccccccccccccccccc770077008888888870707070
0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffcccccccccccccccccccccccc007700778888888870707070
0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffcccccccccccccccccccccccc007700778888888870707070
0000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffccccccccccccccccccccccf770077008888888870707070
0000000000000000000000000000000000000000000000000000000000000000cffffffffffffffcffccccccffffffffccccccff770077007070707070707070
fff33fffccccc1cccccccbcccccccaccf444444fffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
f333333fccccc7ccccccc7ccccccc7cc45555554ffffff6666ffffff0000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
3f2442f3ccccc77cccccc77cccccc77cc444444cffff66555566ffff0000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
fff94fffccccc77cccccc77cccccc77cc555555cff665555555566ff0000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
fff94fffffccc7ffffccc7ffffccc7ffc444444c66555555555555660000000000000000000000000000000000000000000000001111111000000000b6b6b6b6
fff44fffcffffffccffffffccffffffcc555555cf55555555555555f0000000000011111000000000000000011111000000111111111111111100000b6b6b6b6
fff94fffcc44444ccc44444ccc44444c44444444f44444444444444f0000001111111111110000000000001111111111111111111111111111111000b6b6b6b6
fff94fffccc555ccccc555ccccc555ccf555555ff44444444444444f0001111111111111111111111111111111111111111111111111111111111110b6b6b6b6
b6b6b6b6ccccc1cccccccbcccccccaccf4cccc4ff44444444444444f0011111111111111111111111111111111111111111111119999999911111110b6b6b6b6
b6b6b6b6ccccc7ccccccc7ccccccc7cc54545454f44444444444444f0111111999999991111111111111111119999999999999999999999999111111b6b6b6b6
b6b6b6b6ccccc77cccccc77cccccc77c54545454f4cc4444444cc44f0111119999999999999999999999999999999999999999999999999679991111b6b6b6b6
b6b6b6b6ccccc77cccccc77cccccc77c54545454f4cc4466644cc44f0111199777799999999999999999999999999999999999999799999999991111b6b6b6b6
b6b6b6b6ffccc7ffffccc7ffffccc7ff54545454f4cc4466644cc44f1111997766799997966999996799999999999999999666667779999679999111b6b6b6b6
b6b6b6b6cffffffccffffffccffffffc54545454f4ff4466f44ff44f1111997669679997667699999999667779667699996677767677996779999111b6b6b6b6
b6b6b6b6cc44444ccc44444ccc44444c54545454f44444666444444f1111977999677997677999997996677796777799996779777967996799999111b6b6b6b6
b6b6b6b6ccc555ccccc555ccccc555ccf4cccc4fffffffffffffffff1111976999967997799999997796796797799799996796779967997799991111b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b61111976999967997799999996796777797776779996796799967997999111111b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b61111977999979997999999996796666796666677996796799969999991111110b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60111997699779996999999999999996799999999999999999999999991111110b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b61111997777799999999999999999997999999999999999999999999991111000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b61111999799999999999999999996797999999999999999999999999911110000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b61111999999999999999999999996797999999999999967999999999911110000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b61111999999999966779966799996777999999999999967999999991111100000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b61111999999999996799967796999999999999999999967999999911111100000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60111199999999996799677997999999999667777999967999999111111000000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60111199999999996799677997996667799677967966777999999111110000000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60111119999999996799967797966777799679967977777999991111100000000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60011111999999996799997797966766799799967977977999991111000000000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60011111199999966779677997797767799799999967779999991111000000000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60001111111999999999999999999777799999999999999991111110000000000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60000111111199999999999991111111999999991111111111111110000000000b6b6b6b6
b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b60000011111111111111991111111111111991111111111111111110000000000b6b6b6b6
22aaaa88888888aa88888888aaa22222b6b6b6b6b6b6b6b6b6b6b6b60000000111111111111111111111111111111111111111111110000000000000b6b6b6b6
222aaaa8888888aa8888888aaa888222b6b6b6b6b6b6b6b6b6b6b6b60000000011111111111111111100111111111111110000000000000000000000b6b6b6b6
2222aaaa888888aa888888aaa8888822b6b6b6b6b6b6b6b6b6b6b6b60000000000000000111111110000000111111100000000000000000000000000b6b6b6b6
22888aaaa88889aaa99988aaa8888882b6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
288888aaa89999aaa9999aaa88888882b6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
8888888aaa9999aaa9999aaa88888888b6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
a888899aaa9999999999aaaa99998888b6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
aa889999aaa999999999aaa99999988ab6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
aaaa9999999999999999999999999aaab6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
8aaa999999999999999999999999aaaab6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
88aa999999aaaaaaaaaa9999999aaaa8b6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
8899999aaaaaaaaaaaaaaaa9999aaaa8b6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
88999aaaaaaaaaaaaaaaaaaaa999a998b6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
9999aaaaaaaaaaaaaaaaaaaaaa999998b6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
999aaaaaaaaaaaaaaaaaaaaaaaa99999b6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
ddddddddddddddddddddddddddddddddb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
ccccccc7cccccccccccccccccccccc7cb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
ccccccccccccccccccccccccccccccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
7ccccccccccccc777cccccccccccccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
ccc777cccccc777cc7777cccccc7c7ccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
cccccccc7777cccccccc777777ccccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
ccccccccccccccccccccccc7ccccccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
ccccccccccccccccccccccccccccccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
cc7cccccccccccccccccccccccccccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
ccccccccccc7ccccccccccccccccc7ccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
cccccccccccccccccccc777cccccccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
ccc7ccccccccccccc7ccccc77cccccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
cccc77cccccccc77ccccccccc77cccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
cccccc77777777cccccccccccc77ccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
ccccccccccccccccccccccccccccccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
c7ccccccccccccccccc7cccccccc7cccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
ccccccccccccccccccccccccccccccccb6b6b6b6b6b6b6b6b6b6b6b60000000000000000000000000000000000000000000000000000000000000000b6b6b6b6
__gff__
0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000101010000000000000000000000000004000000008000000000008080800000000000000080000000800000000000000000000000000000000000800000
0002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b68696b6b68585858585858585858585858697a84926b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b7c68697a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b7c685858697a6b6b6b6b6b6b6b6b6b6b6b6b
6b5858306b58588058858658585880585858585858697a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b7c6858585858585858697a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b7c6858588058697a6b84826b6b6b6b6b6b6b6b
6b58586b6b5858585895965858585858585858585858697a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b336b68585858588058215858697a6b6b6b6b306b6b6b6b6b6b6b575858585820697a6b6b6b6b6b6b6b6b6b6b6b6b6b7c685880585858585858585858697a6b6b6b6b6b6b6b
6b58587a7c585858585858585858585858585858805858696b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b7c5821585857575757675858697a6b6b6b6b6b6b306b6b6b6b57585858585858696b6b6b6b6b6b6b6b6b7c685858585858585858585858585880585858697a6b6b6b6b6b
3378585858585858585858588058585858585858585858796b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b5757575757697a6b7c68585858675757575757575858697a6b6b6b6b6b6b6b6b6b6b57675843585858586b6b6b6b6b6b7c6858585858585858585880582058676767675858585858696b6b6b6b
6b6b6b225c5858585858585858585858585858585858795a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b57575757575767585858585858586757575757575757588058697a6b6b6b6b6b6b6b6b6b5c676758582158587a6b6b7c6858585858585821585858585858585857575757672158675880586b6b6b6b
6b6b6b6b6b585880585858585858585858805858836b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b5757575757575767585858588058586757575757575757675858585858697a6b6b6b6b6b6b7c58806767585820585858588058585858585880585820585858585757575757675858676758587a6b6b6b
6b6b6b6b6b785858585858805858585858585858946b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b336b7c686757575757575767585858585858585857575757575767585858215858585858585858697a685858586758585858585858585820585858586767585858582157575757575767585880585858696b6b6b
6b226b6b6b6b5c58585858585858585858585858696b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b685867575757575757675858585858585858586767575767585858585858585858585858802058585858806767675858585858585858585858676767675858585858575757576758585858582058586b6b6b
6b6b6b6b6b226b58585858585858585858585858796b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b7c585858675757575767585880585821585858585858585858582058585858585858585858585858586767676767675858585858585858585858586767675858585858586767675820585821575758586b6b6b
6b6b6b6b6b6b6b785858585858588058585858585a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b68215858586757575758585858585858585858585842585858585858585858585857575757575757576767676767676767582158805858585821585757575757575858585858585858585857575780586b6b6b
6b6b6b6b6b6b6b5c7858585858585858585858796b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b58585880585858585858585858585858585858585858585858795a78588058215857575757575757576767676767676767585858585858585858588058585858585858582158585858585858585858586b6b6b
6b6b6b6b6b6b6b6b6b5c7858585858585858795a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b306b6b6b5858585858585858205858582058585858585820585858585a6b6b6b5c7858585858585858676757576767585867676767585858585858585858585858585858585858585858585858585858585858586b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b5c7858795a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b5858585858585858585858585858585858585858585821586b6b6b6b6b5c78585858585880586757576758585867676758585858585880585858585858215858585820585757588058585844585858796b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b5858585858585858585858585858585821585858805858796b6b6b6b6b6b5c7858585858205858575767588058586767585858585858582058585858585858585858585757575858585858585858215a6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b58585820585821585858585880585858585858585858795a6b6b6b6b6b6b6b6b6b5c7858585858575758585858585858585858585858585858805858585858585858575757585820585858585858796b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b336b6b6b91945858585858585867576767676767676757575767675a6b6b6b6b6b6b306b6b6b6b6b5c7858585880675858585858585858582158585858585858585858795a7858585858585858585880585880795a6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b5858585858585867575757575757575757576b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b5c78585858585858585858585858585880585821585858795a6b6b6b6b5c7858585858585858585858795a6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b306b7858585880586757575757575757575757576b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b5c785858585858588058585867675858585858795a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b5c7858585858675757575757575757576b6b6b6b6b6b6b6b306b6b6b6b6b6b6b6b6b6b6b6b5c7858585820585858586767675858795a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b5c78586757575757575757576b6b6b6b6b6b6b6b6b6b6b6b6b336b6b6b6b6b6b6b6b6b6b5c78585858585858676720795a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b336b6b6b6b6b6b5c785858585858795a6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b336b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b336b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b336b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b
__sfx__
00010000060500805008050090500a050090500a0500b0500b0500c0500d0500d0500d0500d0500d0500d0500d0500d0500d0500d0500c0500b0500a0500a0500a05009050090500805007050080500905009050
0001000019050190501805018050180501805017050170501605016050140501405013050160501705018050190501b0501b0501a050180501805017050160501905019050180501605017050180501905019050
000e00001a3201f3200e00010000170000c0000d000170000f000170001c00017000170001200017000110000f000170001a000240001c000230000e000150000d0000f0001a0001c000170000d000240000c000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000007550075500755007550085500b5500d5500f5501255019550205502a550315502d5502a5502755026550255502555026550285502a5502c55031550365503b5503a5502d55025550205501c55016550
__music__
04 41424344

